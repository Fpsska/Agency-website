{"version":3,"file":"static/js/960.eb6a6d05.chunk.js","mappings":"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","sources":["components/common/Preloader/Preloader.tsx","components/Gallery/GalleryTemplate.tsx","components/Gallery/Gallery.tsx","helpers/filter.ts","components/pages/MainPage/MainPage.tsx"],"sourcesContent":["import React from 'react';\r\n\r\nimport './preloader.scss';\r\n\r\n// /. imports\r\n\r\nconst Preloader: React.FC = () => {\r\n    return (\r\n        <div className=\"loader\"></div>\r\n    );\r\n};\r\n\r\nexport default Preloader;\r\n\r\n\r\n","import React, { useEffect } from 'react';\r\n\r\nimport { useAppDispatch } from '../../app/hooks';\r\n\r\nimport {\r\n    setCardActiveStatus,\r\n    filterGalleryByCategory,\r\n    deleteGalleryTemplate,\r\n    setNavGalleryActiveStatus,\r\n    setSelectDefaultValue\r\n} from '../../app/slices/gallerySlice';\r\n\r\n// /. imports\r\n\r\ninterface propTypes {\r\n    id: string,\r\n    category: string,\r\n    text: string,\r\n    image: string,\r\n    alt_description: string,\r\n    isActive: boolean\r\n}\r\n\r\n// /. interfaces\r\n\r\nconst GalleryTemplate: React.FC<propTypes> = (props) => {\r\n\r\n    const {\r\n        id,\r\n        category,\r\n        text,\r\n        image,\r\n        alt_description,\r\n        isActive\r\n    } = props;\r\n\r\n    console.log(alt_description)\r\n\r\n    const dispatch = useAppDispatch();\r\n\r\n    const cardHandler = (): void => {\r\n        dispatch(setCardActiveStatus({ id: id, status: !isActive }));\r\n    };\r\n\r\n    const cardCategoryHandler = (): void => {\r\n        dispatch(filterGalleryByCategory(category.toLocaleLowerCase()));\r\n        dispatch(setNavGalleryActiveStatus({ category: category.toLocaleLowerCase(), status: !isActive }));\r\n        dispatch(setSelectDefaultValue(category.toLocaleLowerCase()));\r\n    };\r\n\r\n    useEffect(() => {\r\n        const deleteCard = (e: any): void => {\r\n            if (isActive && e.code === 'Delete') {\r\n                dispatch(deleteGalleryTemplate());\r\n            }\r\n        };\r\n\r\n        document.addEventListener('keydown', deleteCard);\r\n        return () => {\r\n            document.removeEventListener('keydown', deleteCard);\r\n        };\r\n    }, [isActive]);\r\n\r\n    return (\r\n        <div className={`gallery__card card ${isActive ? 'active' : ''}`} onClick={cardHandler}>\r\n            <img className=\"card__image\" src={image} alt={alt_description} />\r\n            <div className=\"card__information\">\r\n                <span className=\"card__category\"\r\n                    onClick={cardCategoryHandler}\r\n                >\r\n                    {category}\r\n                </span>\r\n                <blockquote className=\"card__name\" title={text} cite=\"https://unsplash.com/\">\r\n                    <p>{text}</p>\r\n                </blockquote>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GalleryTemplate;","import React, { useState, useEffect } from 'react';\r\n\r\nimport { useAppSelector } from '../../app/hooks';\r\n\r\nimport { filter } from '../../helpers/filter';\r\n\r\nimport { galleryCardsTypes } from '../../Types/gallerySliceTypes';\r\n\r\nimport Preloader from '../../components/common/Preloader/Preloader';\r\n\r\nimport GalleryTemplate from './GalleryTemplate';\r\n\r\nimport './gallery.scss';\r\n\r\n// /. imports\r\n\r\nconst Gallery: React.FC = () => {\r\n\r\n    const { galleryCards, isDataLoading, error, filterBy } = useAppSelector(state => state.gallerySlice);\r\n\r\n    const [emptyStatus, setEmptyStatus] = useState<boolean>(false);\r\n    const [currentData, setCurrentData] = useState<galleryCardsTypes[]>(galleryCards);\r\n\r\n    useEffect(() => {\r\n        currentData.length === 0 ? setEmptyStatus(true) : setEmptyStatus(false);\r\n    }, [currentData]);\r\n\r\n    useEffect(() => {\r\n        setCurrentData(filter(galleryCards, filterBy));\r\n    }, [filterBy, galleryCards]);\r\n\r\n    return (\r\n        <>\r\n            {isDataLoading ?\r\n                <div className=\"gallery__preloader\">\r\n                    <Preloader />\r\n                </div>\r\n                :\r\n                <div className=\"gallery__photos\">\r\n                    {currentData.map(item => {\r\n                        return (\r\n                            <GalleryTemplate\r\n                                key={item.id}\r\n                                {...item}\r\n                            />\r\n                        );\r\n                    })}\r\n                </div>\r\n            }\r\n            {\r\n                !isDataLoading && error && <h3 className=\"error\">Error: {error}</h3>\r\n            }\r\n            {\r\n                !isDataLoading && !error && emptyStatus && <h3 className=\"gallery__message\">no matches</h3>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Gallery;","export function filter(array: any[], category: string): any[] {\r\n    switch (category) {\r\n        case 'all':\r\n            return array;\r\n        case category:\r\n            return array.filter((item: any) => item.category.toLocaleLowerCase() === category);\r\n        default:\r\n            return array;\r\n    }\r\n};","import React, { useEffect } from 'react';\r\n\r\nimport { useAppDispatch, useAppSelector } from '../../../app/hooks';\r\n\r\nimport {\r\n    filterGalleryByCategory,\r\n    switchDataLoadingStatus,\r\n    setNavGalleryActiveStatus\r\n} from '../../../app/slices/gallerySlice';\r\n\r\nimport { fetchImagesData } from '../../../app/api/fetchImagesData';\r\n\r\nimport Gallery from '../../Gallery/Gallery';\r\nimport NavLayout from '../../Nav/NavLayout';\r\n\r\nimport './mainPage.scss';\r\n\r\n// /. imports\r\n\r\nconst MainPage: React.FC = () => {\r\n\r\n    const {\r\n        galleryNavTemplate,\r\n        status,\r\n        error,\r\n        isDataLoading\r\n    } = useAppSelector(state => state.gallerySlice);\r\n\r\n    const dispatch = useAppDispatch();\r\n\r\n    const fetchNewData = (): void => {\r\n        dispatch(fetchImagesData());\r\n        dispatch(filterGalleryByCategory('all'));\r\n        dispatch(setNavGalleryActiveStatus({ category: 'all', status: true }));\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (status !== 'loading') {\r\n            setTimeout(() => {\r\n                dispatch(switchDataLoadingStatus(false));\r\n            }, 2000);\r\n        }\r\n    }, [status]);\r\n\r\n    return (\r\n        <section className=\"main-page\">\r\n            <div className=\"main-page__wrapper\">\r\n        \r\n                <div className=\"gallery\">\r\n\r\n                    <div className=\"gallery__wrapper\">\r\n\r\n                        <NavLayout role={'gallery-nav'} />\r\n\r\n                        <Gallery />\r\n\r\n                        <button className=\"gallery__button\" disabled={isDataLoading || !!error} onClick={fetchNewData}>Load More</button>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default MainPage;\r\n"],"names":["className","props","id","category","text","image","alt_description","isActive","console","log","dispatch","useAppDispatch","useEffect","deleteCard","e","code","deleteGalleryTemplate","document","addEventListener","removeEventListener","onClick","setCardActiveStatus","status","src","alt","filterGalleryByCategory","toLocaleLowerCase","setNavGalleryActiveStatus","setSelectDefaultValue","title","cite","useAppSelector","state","gallerySlice","galleryCards","isDataLoading","error","filterBy","useState","emptyStatus","setEmptyStatus","currentData","setCurrentData","length","array","filter","item","map","galleryNavTemplate","setTimeout","switchDataLoadingStatus","NavLayout","role","disabled","fetchImagesData"],"sourceRoot":""}