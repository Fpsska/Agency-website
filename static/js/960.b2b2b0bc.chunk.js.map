{"version":3,"file":"static/js/960.b2b2b0bc.chunk.js","mappings":"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","sources":["components/common/Preloader/Preloader.tsx","components/Gallery/GalleryTemplate.tsx","components/Gallery/Gallery.tsx","helpers/filter.ts","components/pages/MainPage/MainPage.tsx"],"sourcesContent":["import React from 'react';\n\nimport './preloader.scss';\n\n// /. imports\n\nconst Preloader: React.FC = () => {\n    return <div className=\"loader\"></div>;\n};\n\nexport default Preloader;\n","import React, { useEffect } from 'react';\n\nimport { useAppDispatch } from '../../app/hooks';\n\nimport {\n    setCardActiveStatus,\n    filterGalleryByCategory,\n    deleteGalleryTemplate,\n    setNavGalleryActiveStatus,\n    setSelectDefaultValue\n} from '../../app/slices/gallerySlice';\n\n// /. imports\n\ninterface propTypes {\n    id: string;\n    category: string;\n    text: string;\n    image: string;\n    alt_description: string;\n    isActive: boolean;\n}\n\n// /. interfaces\n\nconst GalleryTemplate: React.FC<propTypes> = props => {\n    const { id, category, text, image, alt_description, isActive } = props;\n\n    const dispatch = useAppDispatch();\n\n    // /. hooks\n\n    const cardHandler = (): void => {\n        dispatch(setCardActiveStatus({ id: id, status: !isActive }));\n    };\n\n    const cardCategoryHandler = (): void => {\n        dispatch(filterGalleryByCategory(category.toLocaleLowerCase()));\n        dispatch(\n            setNavGalleryActiveStatus({\n                category: category.toLocaleLowerCase(),\n                status: !isActive\n            })\n        );\n        dispatch(setSelectDefaultValue(category.toLocaleLowerCase()));\n    };\n\n    // /. functions\n\n    useEffect(() => {\n        const deleteCard = (e: any): void => {\n            if (isActive && e.code === 'Delete') {\n                dispatch(deleteGalleryTemplate());\n            }\n        };\n\n        document.addEventListener('keydown', deleteCard);\n        return () => {\n            document.removeEventListener('keydown', deleteCard);\n        };\n    }, [isActive]);\n\n    // /. effects\n\n    return (\n        <div\n            className={`gallery__card card ${isActive ? 'active' : ''}`}\n            onClick={cardHandler}\n        >\n            <img\n                className=\"card__image\"\n                src={image}\n                alt={alt_description}\n            />\n            <div className=\"card__information\">\n                <span\n                    className=\"card__category\"\n                    onClick={cardCategoryHandler}\n                >\n                    {category}\n                </span>\n                <blockquote\n                    className=\"card__name\"\n                    title={text}\n                    cite=\"https://unsplash.com/\"\n                >\n                    <p>{text}</p>\n                </blockquote>\n            </div>\n        </div>\n    );\n};\n\nexport default GalleryTemplate;\n","import React, { useState, useEffect } from 'react';\n\nimport { useAppSelector } from '../../app/hooks';\n\nimport { filter } from '../../helpers/filter';\n\nimport { galleryCardsTypes } from '../../Types/gallerySliceTypes';\n\nimport Preloader from '../../components/common/Preloader/Preloader';\n\nimport GalleryTemplate from './GalleryTemplate';\n\nimport './gallery.scss';\n\n// /. imports\n\nconst Gallery: React.FC = () => {\n    const { galleryCards, isDataLoading, error, filterBy } = useAppSelector(\n        state => state.gallerySlice\n    );\n\n    const [emptyStatus, setEmptyStatus] = useState<boolean>(false);\n    const [currentData, setCurrentData] =\n        useState<galleryCardsTypes[]>(galleryCards);\n\n    // /. hooks\n\n    useEffect(() => {\n        currentData.length === 0 ? setEmptyStatus(true) : setEmptyStatus(false);\n    }, [currentData]);\n\n    useEffect(() => {\n        setCurrentData(filter(galleryCards, filterBy));\n    }, [filterBy, galleryCards]);\n\n    // /. effects\n\n    return (\n        <>\n            {isDataLoading ? (\n                <div className=\"gallery__preloader\">\n                    <Preloader />\n                </div>\n            ) : (\n                <div className=\"gallery__photos\">\n                    {currentData.map(item => {\n                        return (\n                            <GalleryTemplate\n                                key={item.id}\n                                {...item}\n                            />\n                        );\n                    })}\n                </div>\n            )}\n            {!isDataLoading && error && (\n                <h3 className=\"error\">Error: {error}</h3>\n            )}\n            {!isDataLoading && !error && emptyStatus && (\n                <h3 className=\"gallery__message\">no matches</h3>\n            )}\n        </>\n    );\n};\n\nexport default Gallery;\n","export function filter(array: any[], category: string): any[] {\n    switch (category) {\n        case 'all':\n            return array;\n        case category:\n            return array.filter(\n                (item: any) => item.category.toLocaleLowerCase() === category\n            );\n        default:\n            return array;\n    }\n}\n","import React, { useEffect } from 'react';\n\nimport { useAppDispatch, useAppSelector } from '../../../app/hooks';\n\nimport {\n    filterGalleryByCategory,\n    switchDataLoadingStatus,\n    setNavGalleryActiveStatus\n} from '../../../app/slices/gallerySlice';\n\nimport { fetchImagesData } from '../../../app/api/fetchImagesData';\n\nimport Gallery from '../../Gallery/Gallery';\nimport NavLayout from '../../Nav/NavLayout';\n\nimport './mainPage.scss';\n\n// /. imports\n\nconst MainPage: React.FC = () => {\n    const { galleryNavTemplate, status, error, isDataLoading } = useAppSelector(\n        state => state.gallerySlice\n    );\n\n    const dispatch = useAppDispatch();\n\n    // /. hooks\n\n    const fetchNewData = (): void => {\n        dispatch(fetchImagesData());\n        dispatch(filterGalleryByCategory('all'));\n        dispatch(setNavGalleryActiveStatus({ category: 'all', status: true }));\n    };\n\n    // /. functions\n\n    useEffect(() => {\n        if (status !== 'loading') {\n            setTimeout(() => {\n                dispatch(switchDataLoadingStatus(false));\n            }, 2000);\n        }\n    }, [status]);\n\n    // /. effects\n\n    return (\n        <section className=\"main-page\">\n            <div className=\"main-page__wrapper\">\n                <div className=\"gallery\">\n                    <div className=\"gallery__wrapper\">\n                        <NavLayout role={'gallery-nav'} />\n\n                        <Gallery />\n\n                        <button\n                            className=\"gallery__button\"\n                            disabled={isDataLoading || !!error}\n                            onClick={fetchNewData}\n                        >\n                            Load More\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </section>\n    );\n};\n\nexport default MainPage;\n"],"names":["className","props","id","category","text","image","alt_description","isActive","dispatch","useAppDispatch","useEffect","deleteCard","e","code","deleteGalleryTemplate","document","addEventListener","removeEventListener","onClick","setCardActiveStatus","status","src","alt","filterGalleryByCategory","toLocaleLowerCase","setNavGalleryActiveStatus","setSelectDefaultValue","title","cite","useAppSelector","state","gallerySlice","galleryCards","isDataLoading","error","filterBy","useState","emptyStatus","setEmptyStatus","currentData","setCurrentData","length","array","filter","item","map","galleryNavTemplate","setTimeout","switchDataLoadingStatus","NavLayout","role","disabled","fetchImagesData"],"sourceRoot":""}