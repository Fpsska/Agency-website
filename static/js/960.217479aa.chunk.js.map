{"version":3,"file":"static/js/960.217479aa.chunk.js","mappings":"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","sources":["components/common/Preloader/Preloader.tsx","components/Gallery/GalleryTemplate.tsx","components/Gallery/Gallery.tsx","helpers/filter.ts","components/pages/MainPage/MainPage.tsx"],"sourcesContent":["import React from 'react';\r\n\r\nimport './preloader.scss';\r\n\r\n// /. imports\r\n\r\nconst Preloader: React.FC = () => {\r\n    return <div className=\"loader\"></div>;\r\n};\r\n\r\nexport default Preloader;\r\n","import React, { useEffect } from 'react';\r\n\r\nimport { useAppDispatch } from '../../app/hooks';\r\n\r\nimport {\r\n    setCardActiveStatus,\r\n    filterGalleryByCategory,\r\n    deleteGalleryTemplate,\r\n    setNavGalleryActiveStatus,\r\n    setSelectDefaultValue\r\n} from '../../app/slices/gallerySlice';\r\n\r\n// /. imports\r\n\r\ninterface propTypes {\r\n    id: string;\r\n    category: string;\r\n    text: string;\r\n    image: string;\r\n    alt_description: string;\r\n    isActive: boolean;\r\n}\r\n\r\n// /. interfaces\r\n\r\nconst GalleryTemplate: React.FC<propTypes> = props => {\r\n    const { id, category, text, image, alt_description, isActive } = props;\r\n\r\n    const dispatch = useAppDispatch();\r\n\r\n    // /. hooks\r\n\r\n    const cardHandler = (): void => {\r\n        dispatch(setCardActiveStatus({ id: id, status: !isActive }));\r\n    };\r\n\r\n    const cardCategoryHandler = (): void => {\r\n        dispatch(filterGalleryByCategory(category.toLocaleLowerCase()));\r\n        dispatch(\r\n            setNavGalleryActiveStatus({\r\n                category: category.toLocaleLowerCase(),\r\n                status: !isActive\r\n            })\r\n        );\r\n        dispatch(setSelectDefaultValue(category.toLocaleLowerCase()));\r\n    };\r\n\r\n    // /. functions\r\n\r\n    useEffect(() => {\r\n        const deleteCard = (e: any): void => {\r\n            if (isActive && e.code === 'Delete') {\r\n                dispatch(deleteGalleryTemplate());\r\n            }\r\n        };\r\n\r\n        document.addEventListener('keydown', deleteCard);\r\n        return () => {\r\n            document.removeEventListener('keydown', deleteCard);\r\n        };\r\n    }, [isActive]);\r\n\r\n    // /. effects\r\n\r\n    return (\r\n        <div\r\n            className={`gallery__card card ${isActive ? 'active' : ''}`}\r\n            onClick={cardHandler}\r\n        >\r\n            <img\r\n                className=\"card__image\"\r\n                src={image}\r\n                alt={alt_description}\r\n            />\r\n            <div className=\"card__information\">\r\n                <span\r\n                    className=\"card__category\"\r\n                    onClick={cardCategoryHandler}\r\n                >\r\n                    {category}\r\n                </span>\r\n                <blockquote\r\n                    className=\"card__name\"\r\n                    title={text}\r\n                    cite=\"https://unsplash.com/\"\r\n                >\r\n                    <p>{text}</p>\r\n                </blockquote>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GalleryTemplate;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { useAppSelector } from '../../app/hooks';\r\n\r\nimport { filter } from '../../helpers/filter';\r\n\r\nimport { galleryCardsTypes } from '../../Types/gallerySliceTypes';\r\n\r\nimport Preloader from '../../components/common/Preloader/Preloader';\r\n\r\nimport GalleryTemplate from './GalleryTemplate';\r\n\r\nimport './gallery.scss';\r\n\r\n// /. imports\r\n\r\nconst Gallery: React.FC = () => {\r\n    const { galleryCards, isDataLoading, error, filterBy } = useAppSelector(\r\n        state => state.gallerySlice\r\n    );\r\n\r\n    const [emptyStatus, setEmptyStatus] = useState<boolean>(false);\r\n    const [currentData, setCurrentData] =\r\n        useState<galleryCardsTypes[]>(galleryCards);\r\n\r\n    // /. hooks\r\n\r\n    useEffect(() => {\r\n        currentData.length === 0 ? setEmptyStatus(true) : setEmptyStatus(false);\r\n    }, [currentData]);\r\n\r\n    useEffect(() => {\r\n        setCurrentData(filter(galleryCards, filterBy));\r\n    }, [filterBy, galleryCards]);\r\n\r\n    // /. effects\r\n\r\n    return (\r\n        <>\r\n            {isDataLoading ? (\r\n                <div className=\"gallery__preloader\">\r\n                    <Preloader />\r\n                </div>\r\n            ) : (\r\n                <div className=\"gallery__photos\">\r\n                    {currentData.map(item => {\r\n                        return (\r\n                            <GalleryTemplate\r\n                                key={item.id}\r\n                                {...item}\r\n                            />\r\n                        );\r\n                    })}\r\n                </div>\r\n            )}\r\n            {!isDataLoading && error && (\r\n                <h3 className=\"error\">Error: {error}</h3>\r\n            )}\r\n            {!isDataLoading && !error && emptyStatus && (\r\n                <h3 className=\"gallery__message\">no matches</h3>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Gallery;\r\n","export function filter(array: any[], category: string): any[] {\r\n    switch (category) {\r\n        case 'all':\r\n            return array;\r\n        case category:\r\n            return array.filter(\r\n                (item: any) => item.category.toLocaleLowerCase() === category\r\n            );\r\n        default:\r\n            return array;\r\n    }\r\n}\r\n","import React, { useEffect } from 'react';\r\n\r\nimport { useAppDispatch, useAppSelector } from '../../../app/hooks';\r\n\r\nimport {\r\n    filterGalleryByCategory,\r\n    switchDataLoadingStatus,\r\n    setNavGalleryActiveStatus\r\n} from '../../../app/slices/gallerySlice';\r\n\r\nimport { fetchImagesData } from '../../../app/api/fetchImagesData';\r\n\r\nimport Gallery from '../../Gallery/Gallery';\r\nimport NavLayout from '../../Nav/NavLayout';\r\n\r\nimport './mainPage.scss';\r\n\r\n// /. imports\r\n\r\nconst MainPage: React.FC = () => {\r\n    const { galleryNavTemplate, status, error, isDataLoading } = useAppSelector(\r\n        state => state.gallerySlice\r\n    );\r\n\r\n    const dispatch = useAppDispatch();\r\n\r\n    // /. hooks\r\n\r\n    const fetchNewData = (): void => {\r\n        dispatch(fetchImagesData());\r\n        dispatch(filterGalleryByCategory('all'));\r\n        dispatch(setNavGalleryActiveStatus({ category: 'all', status: true }));\r\n    };\r\n\r\n    // /. functions\r\n\r\n    useEffect(() => {\r\n        if (status !== 'loading') {\r\n            setTimeout(() => {\r\n                dispatch(switchDataLoadingStatus(false));\r\n            }, 2000);\r\n        }\r\n    }, [status]);\r\n\r\n    // /. effects\r\n\r\n    return (\r\n        <section className=\"main-page\">\r\n            <div className=\"main-page__wrapper\">\r\n                <div className=\"gallery\">\r\n                    <div className=\"gallery__wrapper\">\r\n                        <NavLayout role={'gallery-nav'} />\r\n\r\n                        <Gallery />\r\n\r\n                        <button\r\n                            className=\"gallery__button\"\r\n                            disabled={isDataLoading || !!error}\r\n                            onClick={fetchNewData}\r\n                        >\r\n                            Load More\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default MainPage;\r\n"],"names":["className","props","id","category","text","image","alt_description","isActive","dispatch","useAppDispatch","useEffect","deleteCard","e","code","deleteGalleryTemplate","document","addEventListener","removeEventListener","onClick","setCardActiveStatus","status","src","alt","filterGalleryByCategory","toLocaleLowerCase","setNavGalleryActiveStatus","setSelectDefaultValue","title","cite","useAppSelector","state","gallerySlice","galleryCards","isDataLoading","error","filterBy","useState","emptyStatus","setEmptyStatus","currentData","setCurrentData","length","array","filter","item","map","galleryNavTemplate","setTimeout","switchDataLoadingStatus","NavLayout","role","disabled","fetchImagesData"],"sourceRoot":""}